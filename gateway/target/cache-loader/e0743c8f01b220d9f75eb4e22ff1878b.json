{"remainingRequest":"/Users/tamdx/github/medlatec/gateway/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/tamdx/github/medlatec/gateway/node_modules/ts-loader/index.js??ref--9-3!/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js!/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/core/auth/account.service.ts","dependencies":[{"path":"/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/core/auth/account.service.ts","mtime":1576592215210},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYSwgX2IsIF9jLCBfZDsKaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnOwppbXBvcnQgeyBKaGlMYW5ndWFnZVNlcnZpY2UgfSBmcm9tICduZy1qaGlwc3Rlcic7CmltcG9ydCB7IFNlc3Npb25TdG9yYWdlU2VydmljZSB9IGZyb20gJ25neC13ZWJzdG9yYWdlJzsKaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJzsKaW1wb3J0IHsgU3ViamVjdCwgb2YgfSBmcm9tICdyeGpzJzsKaW1wb3J0IHsgc2hhcmVSZXBsYXksIHRhcCwgY2F0Y2hFcnJvciB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJzsKaW1wb3J0IHsgU0VSVkVSX0FQSV9VUkwgfSBmcm9tICdhcHAvYXBwLmNvbnN0YW50cyc7CmltcG9ydCB7IEpoaVRyYWNrZXJTZXJ2aWNlIH0gZnJvbSAnLi4vdHJhY2tlci90cmFja2VyLnNlcnZpY2UnOwpsZXQgQWNjb3VudFNlcnZpY2UgPSBjbGFzcyBBY2NvdW50U2VydmljZSB7CiAgICBjb25zdHJ1Y3RvcihsYW5ndWFnZVNlcnZpY2UsIHNlc3Npb25TdG9yYWdlLCBodHRwLCB0cmFja2VyU2VydmljZSkgewogICAgICAgIHRoaXMubGFuZ3VhZ2VTZXJ2aWNlID0gbGFuZ3VhZ2VTZXJ2aWNlOwogICAgICAgIHRoaXMuc2Vzc2lvblN0b3JhZ2UgPSBzZXNzaW9uU3RvcmFnZTsKICAgICAgICB0aGlzLmh0dHAgPSBodHRwOwogICAgICAgIHRoaXMudHJhY2tlclNlcnZpY2UgPSB0cmFja2VyU2VydmljZTsKICAgICAgICB0aGlzLmF1dGhlbnRpY2F0ZWQgPSBmYWxzZTsKICAgICAgICB0aGlzLmF1dGhlbnRpY2F0aW9uU3RhdGUgPSBuZXcgU3ViamVjdCgpOwogICAgfQogICAgZmV0Y2goKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQoU0VSVkVSX0FQSV9VUkwgKyAnYXBpL2FjY291bnQnKTsKICAgIH0KICAgIHNhdmUoYWNjb3VudCkgewogICAgICAgIHJldHVybiB0aGlzLmh0dHAucG9zdChTRVJWRVJfQVBJX1VSTCArICdhcGkvYWNjb3VudCcsIGFjY291bnQpOwogICAgfQogICAgYXV0aGVudGljYXRlKGlkZW50aXR5KSB7CiAgICAgICAgdGhpcy51c2VySWRlbnRpdHkgPSBpZGVudGl0eTsKICAgICAgICB0aGlzLmF1dGhlbnRpY2F0ZWQgPSBpZGVudGl0eSAhPT0gbnVsbDsKICAgICAgICB0aGlzLmF1dGhlbnRpY2F0aW9uU3RhdGUubmV4dCh0aGlzLnVzZXJJZGVudGl0eSk7CiAgICB9CiAgICBoYXNBbnlBdXRob3JpdHkoYXV0aG9yaXRpZXMpIHsKICAgICAgICBpZiAoIXRoaXMuYXV0aGVudGljYXRlZCB8fCAhdGhpcy51c2VySWRlbnRpdHkgfHwgIXRoaXMudXNlcklkZW50aXR5LmF1dGhvcml0aWVzKSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGF1dGhvcml0aWVzKSkgewogICAgICAgICAgICBhdXRob3JpdGllcyA9IFthdXRob3JpdGllc107CiAgICAgICAgfQogICAgICAgIHJldHVybiBhdXRob3JpdGllcy5zb21lKChhdXRob3JpdHkpID0+IHRoaXMudXNlcklkZW50aXR5LmF1dGhvcml0aWVzLmluY2x1ZGVzKGF1dGhvcml0eSkpOwogICAgfQogICAgaWRlbnRpdHkoZm9yY2UpIHsKICAgICAgICBpZiAoZm9yY2UgfHwgIXRoaXMuYXV0aGVudGljYXRlZCkgewogICAgICAgICAgICB0aGlzLmFjY291bnRDYWNoZSQgPSBudWxsOwogICAgICAgIH0KICAgICAgICBpZiAoIXRoaXMuYWNjb3VudENhY2hlJCkgewogICAgICAgICAgICB0aGlzLmFjY291bnRDYWNoZSQgPSB0aGlzLmZldGNoKCkucGlwZShjYXRjaEVycm9yKCgpID0+IHsKICAgICAgICAgICAgICAgIGlmICh0aGlzLnRyYWNrZXJTZXJ2aWNlLnN0b21wQ2xpZW50ICYmIHRoaXMudHJhY2tlclNlcnZpY2Uuc3RvbXBDbGllbnQuY29ubmVjdGVkKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy50cmFja2VyU2VydmljZS5kaXNjb25uZWN0KCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gb2YobnVsbCk7CiAgICAgICAgICAgIH0pLCB0YXAoYWNjb3VudCA9PiB7CiAgICAgICAgICAgICAgICBpZiAoYWNjb3VudCkgewogICAgICAgICAgICAgICAgICAgIHRoaXMudXNlcklkZW50aXR5ID0gYWNjb3VudDsKICAgICAgICAgICAgICAgICAgICB0aGlzLmF1dGhlbnRpY2F0ZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgIHRoaXMudHJhY2tlclNlcnZpY2UuY29ubmVjdCgpOwogICAgICAgICAgICAgICAgICAgIC8vIEFmdGVyIHJldHJpZXZlIHRoZSBhY2NvdW50IGluZm8sIHRoZSBsYW5ndWFnZSB3aWxsIGJlIGNoYW5nZWQgdG8KICAgICAgICAgICAgICAgICAgICAvLyB0aGUgdXNlcidzIHByZWZlcnJlZCBsYW5ndWFnZSBjb25maWd1cmVkIGluIHRoZSBhY2NvdW50IHNldHRpbmcKICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy51c2VySWRlbnRpdHkubGFuZ0tleSkgewogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBsYW5nS2V5ID0gdGhpcy5zZXNzaW9uU3RvcmFnZS5yZXRyaWV2ZSgnbG9jYWxlJykgfHwgdGhpcy51c2VySWRlbnRpdHkubGFuZ0tleTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sYW5ndWFnZVNlcnZpY2UuY2hhbmdlTGFuZ3VhZ2UobGFuZ0tleSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy51c2VySWRlbnRpdHkgPSBudWxsOwogICAgICAgICAgICAgICAgICAgIHRoaXMuYXV0aGVudGljYXRlZCA9IGZhbHNlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy5hdXRoZW50aWNhdGlvblN0YXRlLm5leHQodGhpcy51c2VySWRlbnRpdHkpOwogICAgICAgICAgICB9KSwgc2hhcmVSZXBsYXkoKSk7CiAgICAgICAgfQogICAgICAgIHJldHVybiB0aGlzLmFjY291bnRDYWNoZSQ7CiAgICB9CiAgICBpc0F1dGhlbnRpY2F0ZWQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYXV0aGVudGljYXRlZDsKICAgIH0KICAgIGlzSWRlbnRpdHlSZXNvbHZlZCgpIHsKICAgICAgICByZXR1cm4gdGhpcy51c2VySWRlbnRpdHkgIT09IHVuZGVmaW5lZDsKICAgIH0KICAgIGdldEF1dGhlbnRpY2F0aW9uU3RhdGUoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYXV0aGVudGljYXRpb25TdGF0ZS5hc09ic2VydmFibGUoKTsKICAgIH0KICAgIGdldEltYWdlVXJsKCkgewogICAgICAgIHJldHVybiB0aGlzLmlzSWRlbnRpdHlSZXNvbHZlZCgpID8gdGhpcy51c2VySWRlbnRpdHkuaW1hZ2VVcmwgOiBudWxsOwogICAgfQp9OwpBY2NvdW50U2VydmljZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbCiAgICBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pLAogICAgdHNsaWJfMS5fX21ldGFkYXRhKCJkZXNpZ246cGFyYW10eXBlcyIsIFt0eXBlb2YgKF9hID0gdHlwZW9mIEpoaUxhbmd1YWdlU2VydmljZSAhPT0gInVuZGVmaW5lZCIgJiYgSmhpTGFuZ3VhZ2VTZXJ2aWNlKSA9PT0gImZ1bmN0aW9uIiA/IF9hIDogT2JqZWN0LCB0eXBlb2YgKF9iID0gdHlwZW9mIFNlc3Npb25TdG9yYWdlU2VydmljZSAhPT0gInVuZGVmaW5lZCIgJiYgU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlKSA9PT0gImZ1bmN0aW9uIiA/IF9iIDogT2JqZWN0LCB0eXBlb2YgKF9jID0gdHlwZW9mIEh0dHBDbGllbnQgIT09ICJ1bmRlZmluZWQiICYmIEh0dHBDbGllbnQpID09PSAiZnVuY3Rpb24iID8gX2MgOiBPYmplY3QsIHR5cGVvZiAoX2QgPSB0eXBlb2YgSmhpVHJhY2tlclNlcnZpY2UgIT09ICJ1bmRlZmluZWQiICYmIEpoaVRyYWNrZXJTZXJ2aWNlKSA9PT0gImZ1bmN0aW9uIiA/IF9kIDogT2JqZWN0XSkKXSwgQWNjb3VudFNlcnZpY2UpOwpleHBvcnQgeyBBY2NvdW50U2VydmljZSB9Owo="},{"version":3,"file":"/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/core/auth/account.service.ts","sourceRoot":"","sources":["/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js!/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/core/auth/account.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { JhiLanguageService } from 'ng-jhipster';\nimport { SessionStorageService } from 'ngx-webstorage';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject, of } from 'rxjs';\nimport { shareReplay, tap, catchError } from 'rxjs/operators';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { Account } from 'app/core/user/account.model';\nimport { JhiTrackerService } from '../tracker/tracker.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n  private userIdentity: Account;\n  private authenticated = false;\n  private authenticationState = new Subject<any>();\n  private accountCache$: Observable<Account>;\n\n  constructor(\n    private languageService: JhiLanguageService,\n    private sessionStorage: SessionStorageService,\n    private http: HttpClient,\n    private trackerService: JhiTrackerService\n  ) {}\n\n  fetch(): Observable<Account> {\n    return this.http.get<Account>(SERVER_API_URL + 'api/account');\n  }\n\n  save(account: Account): Observable<Account> {\n    return this.http.post<Account>(SERVER_API_URL + 'api/account', account);\n  }\n\n  authenticate(identity) {\n    this.userIdentity = identity;\n    this.authenticated = identity !== null;\n    this.authenticationState.next(this.userIdentity);\n  }\n\n  hasAnyAuthority(authorities: string[] | string): boolean {\n    if (!this.authenticated || !this.userIdentity || !this.userIdentity.authorities) {\n      return false;\n    }\n\n    if (!Array.isArray(authorities)) {\n      authorities = [authorities];\n    }\n\n    return authorities.some((authority: string) => this.userIdentity.authorities.includes(authority));\n  }\n\n  identity(force?: boolean): Observable<Account> {\n    if (force || !this.authenticated) {\n      this.accountCache$ = null;\n    }\n\n    if (!this.accountCache$) {\n      this.accountCache$ = this.fetch().pipe(\n        catchError(() => {\n          if (this.trackerService.stompClient && this.trackerService.stompClient.connected) {\n            this.trackerService.disconnect();\n          }\n          return of(null);\n        }),\n        tap(account => {\n          if (account) {\n            this.userIdentity = account;\n            this.authenticated = true;\n            this.trackerService.connect();\n            // After retrieve the account info, the language will be changed to\n            // the user's preferred language configured in the account setting\n            if (this.userIdentity.langKey) {\n              const langKey = this.sessionStorage.retrieve('locale') || this.userIdentity.langKey;\n              this.languageService.changeLanguage(langKey);\n            }\n          } else {\n            this.userIdentity = null;\n            this.authenticated = false;\n          }\n          this.authenticationState.next(this.userIdentity);\n        }),\n        shareReplay()\n      );\n    }\n    return this.accountCache$;\n  }\n\n  isAuthenticated(): boolean {\n    return this.authenticated;\n  }\n\n  isIdentityResolved(): boolean {\n    return this.userIdentity !== undefined;\n  }\n\n  getAuthenticationState(): Observable<any> {\n    return this.authenticationState.asObservable();\n  }\n\n  getImageUrl(): string {\n    return this.isIdentityResolved() ? this.userIdentity.imageUrl : null;\n  }\n}\n"]}]}