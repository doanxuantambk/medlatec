{"remainingRequest":"/Users/tamdx/github/medlatec/gateway/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/tamdx/github/medlatec/gateway/node_modules/ts-loader/index.js??ref--9-3!/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js!/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/layouts/profiles/profile.service.ts","dependencies":[{"path":"/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/layouts/profiles/profile.service.ts","mtime":1576592213632},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYTsKaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnOwppbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnOwppbXBvcnQgeyBtYXAsIHNoYXJlUmVwbGF5IH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnOwppbXBvcnQgeyBTRVJWRVJfQVBJX1VSTCB9IGZyb20gJ2FwcC9hcHAuY29uc3RhbnRzJzsKaW1wb3J0IHsgUHJvZmlsZUluZm8gfSBmcm9tICcuL3Byb2ZpbGUtaW5mby5tb2RlbCc7CmxldCBQcm9maWxlU2VydmljZSA9IGNsYXNzIFByb2ZpbGVTZXJ2aWNlIHsKICAgIGNvbnN0cnVjdG9yKGh0dHApIHsKICAgICAgICB0aGlzLmh0dHAgPSBodHRwOwogICAgICAgIHRoaXMuaW5mb1VybCA9IFNFUlZFUl9BUElfVVJMICsgJ21hbmFnZW1lbnQvaW5mbyc7CiAgICB9CiAgICBnZXRQcm9maWxlSW5mbygpIHsKICAgICAgICBpZiAodGhpcy5wcm9maWxlSW5mbyQpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvZmlsZUluZm8kOwogICAgICAgIH0KICAgICAgICB0aGlzLnByb2ZpbGVJbmZvJCA9IHRoaXMuaHR0cC5nZXQodGhpcy5pbmZvVXJsKS5waXBlKG1hcCgocHJvZmlsZUluZm8pID0+IHsKICAgICAgICAgICAgY29uc3QgcGkgPSBuZXcgUHJvZmlsZUluZm8oKTsKICAgICAgICAgICAgcGkuYWN0aXZlUHJvZmlsZXMgPSBwcm9maWxlSW5mby5hY3RpdmVQcm9maWxlczsKICAgICAgICAgICAgY29uc3QgZGlzcGxheVJpYmJvbk9uUHJvZmlsZXMgPSBwcm9maWxlSW5mb1snZGlzcGxheS1yaWJib24tb24tcHJvZmlsZXMnXS5zcGxpdCgnLCcpOwogICAgICAgICAgICBpZiAocGkuYWN0aXZlUHJvZmlsZXMpIHsKICAgICAgICAgICAgICAgIGNvbnN0IHJpYmJvblByb2ZpbGVzID0gZGlzcGxheVJpYmJvbk9uUHJvZmlsZXMuZmlsdGVyKHByb2ZpbGUgPT4gcGkuYWN0aXZlUHJvZmlsZXMuaW5jbHVkZXMocHJvZmlsZSkpOwogICAgICAgICAgICAgICAgaWYgKHJpYmJvblByb2ZpbGVzLmxlbmd0aCAhPT0gMCkgewogICAgICAgICAgICAgICAgICAgIHBpLnJpYmJvbkVudiA9IHJpYmJvblByb2ZpbGVzWzBdOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcGkuaW5Qcm9kdWN0aW9uID0gcGkuYWN0aXZlUHJvZmlsZXMuaW5jbHVkZXMoJ3Byb2QnKTsKICAgICAgICAgICAgICAgIHBpLnN3YWdnZXJFbmFibGVkID0gcGkuYWN0aXZlUHJvZmlsZXMuaW5jbHVkZXMoJ3N3YWdnZXInKTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcGk7CiAgICAgICAgfSksIHNoYXJlUmVwbGF5KCkpOwogICAgICAgIHJldHVybiB0aGlzLnByb2ZpbGVJbmZvJDsKICAgIH0KfTsKUHJvZmlsZVNlcnZpY2UgPSB0c2xpYl8xLl9fZGVjb3JhdGUoWwogICAgSW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KSwKICAgIHRzbGliXzEuX19tZXRhZGF0YSgiZGVzaWduOnBhcmFtdHlwZXMiLCBbdHlwZW9mIChfYSA9IHR5cGVvZiBIdHRwQ2xpZW50ICE9PSAidW5kZWZpbmVkIiAmJiBIdHRwQ2xpZW50KSA9PT0gImZ1bmN0aW9uIiA/IF9hIDogT2JqZWN0XSkKXSwgUHJvZmlsZVNlcnZpY2UpOwpleHBvcnQgeyBQcm9maWxlU2VydmljZSB9Owo="},{"version":3,"file":"/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/layouts/profiles/profile.service.ts","sourceRoot":"","sources":["/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js!/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/layouts/profiles/profile.service.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,GAAG,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAGlD,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AACnD,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AAGnD,IAAa,cAAc,GAA3B,MAAa,cAAc;IAIzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH5B,YAAO,GAAG,cAAc,GAAG,iBAAiB,CAAC;IAGd,CAAC;IAExC,cAAc;QACZ,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,OAAO,IAAI,CAAC,YAAY,CAAC;SAC1B;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAC/D,GAAG,CAAC,CAAC,WAAwB,EAAE,EAAE;YAC/B,MAAM,EAAE,GAAG,IAAI,WAAW,EAAE,CAAC;YAC7B,EAAE,CAAC,cAAc,GAAG,WAAW,CAAC,cAAc,CAAC;YAC/C,MAAM,uBAAuB,GAAG,WAAW,CAAC,4BAA4B,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrF,IAAI,EAAE,CAAC,cAAc,EAAE;gBACrB,MAAM,cAAc,GAAG,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;gBACtG,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC/B,EAAE,CAAC,SAAS,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;iBAClC;gBACD,EAAE,CAAC,YAAY,GAAG,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACrD,EAAE,CAAC,cAAc,GAAG,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;aAC3D;YACD,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,EACF,WAAW,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;CACF,CAAA;AA9BY,cAAc;IAD1B,UAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAKP,UAAU,oBAAV,UAAU;GAJzB,cAAc,CA8B1B;SA9BY,cAAc","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { ProfileInfo } from './profile-info.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ProfileService {\n  private infoUrl = SERVER_API_URL + 'management/info';\n  private profileInfo$: Observable<ProfileInfo>;\n\n  constructor(private http: HttpClient) {}\n\n  getProfileInfo(): Observable<ProfileInfo> {\n    if (this.profileInfo$) {\n      return this.profileInfo$;\n    }\n\n    this.profileInfo$ = this.http.get<ProfileInfo>(this.infoUrl).pipe(\n      map((profileInfo: ProfileInfo) => {\n        const pi = new ProfileInfo();\n        pi.activeProfiles = profileInfo.activeProfiles;\n        const displayRibbonOnProfiles = profileInfo['display-ribbon-on-profiles'].split(',');\n        if (pi.activeProfiles) {\n          const ribbonProfiles = displayRibbonOnProfiles.filter(profile => pi.activeProfiles.includes(profile));\n          if (ribbonProfiles.length !== 0) {\n            pi.ribbonEnv = ribbonProfiles[0];\n          }\n          pi.inProduction = pi.activeProfiles.includes('prod');\n          pi.swaggerEnabled = pi.activeProfiles.includes('swagger');\n        }\n        return pi;\n      }),\n      shareReplay()\n    );\n    return this.profileInfo$;\n  }\n}\n"]}]}