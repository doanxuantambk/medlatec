{"remainingRequest":"/Users/tamdx/github/medlatec/gateway/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/tamdx/github/medlatec/gateway/node_modules/ts-loader/index.js??ref--9-3!/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js!/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/admin/gateway/gateway-routes.service.ts","dependencies":[{"path":"/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/admin/gateway/gateway-routes.service.ts","mtime":1576592214712},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYTsKaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnOwppbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnOwppbXBvcnQgeyBTRVJWRVJfQVBJX1VSTCB9IGZyb20gJ2FwcC9hcHAuY29uc3RhbnRzJzsKbGV0IEdhdGV3YXlSb3V0ZXNTZXJ2aWNlID0gY2xhc3MgR2F0ZXdheVJvdXRlc1NlcnZpY2UgewogICAgY29uc3RydWN0b3IoaHR0cCkgewogICAgICAgIHRoaXMuaHR0cCA9IGh0dHA7CiAgICB9CiAgICBmaW5kQWxsKCkgewogICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KFNFUlZFUl9BUElfVVJMICsgJ2FwaS9nYXRld2F5L3JvdXRlcy8nKTsKICAgIH0KfTsKR2F0ZXdheVJvdXRlc1NlcnZpY2UgPSB0c2xpYl8xLl9fZGVjb3JhdGUoWwogICAgSW5qZWN0YWJsZSgpLAogICAgdHNsaWJfMS5fX21ldGFkYXRhKCJkZXNpZ246cGFyYW10eXBlcyIsIFt0eXBlb2YgKF9hID0gdHlwZW9mIEh0dHBDbGllbnQgIT09ICJ1bmRlZmluZWQiICYmIEh0dHBDbGllbnQpID09PSAiZnVuY3Rpb24iID8gX2EgOiBPYmplY3RdKQpdLCBHYXRld2F5Um91dGVzU2VydmljZSk7CmV4cG9ydCB7IEdhdGV3YXlSb3V0ZXNTZXJ2aWNlIH07Cg=="},{"version":3,"file":"/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/admin/gateway/gateway-routes.service.ts","sourceRoot":"","sources":["/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js!/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/admin/gateway/gateway-routes.service.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAGlD,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAInD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAC/B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,cAAc,GAAG,qBAAqB,CAAC,CAAC;IAC/E,CAAC;CACF,CAAA;AANY,oBAAoB;IADhC,UAAU,EAAE;iEAEe,UAAU,oBAAV,UAAU;GADzB,oBAAoB,CAMhC;SANY,oBAAoB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { GatewayRoute } from './gateway-route.model';\n\n@Injectable()\nexport class GatewayRoutesService {\n  constructor(private http: HttpClient) {}\n\n  findAll(): Observable<GatewayRoute[]> {\n    return this.http.get<GatewayRoute[]>(SERVER_API_URL + 'api/gateway/routes/');\n  }\n}\n"]}]}