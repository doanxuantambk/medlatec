{"remainingRequest":"/Users/tamdx/github/medlatec/gateway/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/tamdx/github/medlatec/gateway/node_modules/ts-loader/index.js??ref--9-3!/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js!/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/admin/metrics/metrics.component.ts","dependencies":[{"path":"/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/admin/metrics/metrics.component.ts","mtime":1576592214405},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYTsKaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7CmltcG9ydCB7IEpoaU1ldHJpY3NTZXJ2aWNlIH0gZnJvbSAnLi9tZXRyaWNzLnNlcnZpY2UnOwpsZXQgSmhpTWV0cmljc01vbml0b3JpbmdDb21wb25lbnQgPSBjbGFzcyBKaGlNZXRyaWNzTW9uaXRvcmluZ0NvbXBvbmVudCB7CiAgICBjb25zdHJ1Y3RvcihtZXRyaWNzU2VydmljZSkgewogICAgICAgIHRoaXMubWV0cmljc1NlcnZpY2UgPSBtZXRyaWNzU2VydmljZTsKICAgICAgICB0aGlzLm1ldHJpY3MgPSB7fTsKICAgICAgICB0aGlzLnRocmVhZERhdGEgPSB7fTsKICAgICAgICB0aGlzLnVwZGF0aW5nTWV0cmljcyA9IHRydWU7CiAgICAgICAgdGhpcy5KQ0FDSEVfS0VZID0gJ2pjYWNoZS5zdGF0aXN0aWNzJzsKICAgIH0KICAgIG5nT25Jbml0KCkgewogICAgICAgIHRoaXMucmVmcmVzaCgpOwogICAgfQogICAgcmVmcmVzaCgpIHsKICAgICAgICB0aGlzLnVwZGF0aW5nTWV0cmljcyA9IHRydWU7CiAgICAgICAgdGhpcy5tZXRyaWNzU2VydmljZS5nZXRNZXRyaWNzKCkuc3Vic2NyaWJlKG1ldHJpY3MgPT4gewogICAgICAgICAgICB0aGlzLm1ldHJpY3MgPSBtZXRyaWNzOwogICAgICAgICAgICB0aGlzLm1ldHJpY3NTZXJ2aWNlLnRocmVhZER1bXAoKS5zdWJzY3JpYmUoZGF0YSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLnRocmVhZERhdGEgPSBkYXRhLnRocmVhZHM7CiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0aW5nTWV0cmljcyA9IGZhbHNlOwogICAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgIH0KICAgIGlzT2JqZWN0RXhpc3RpbmcobWV0cmljcywga2V5KSB7CiAgICAgICAgcmV0dXJuIG1ldHJpY3MgJiYgbWV0cmljc1trZXldOwogICAgfQogICAgaXNPYmplY3RFeGlzdGluZ0FuZE5vdEVtcHR5KG1ldHJpY3MsIGtleSkgewogICAgICAgIHJldHVybiB0aGlzLmlzT2JqZWN0RXhpc3RpbmcobWV0cmljcywga2V5KSAmJiBKU09OLnN0cmluZ2lmeShtZXRyaWNzW2tleV0pICE9PSAne30nOwogICAgfQp9OwpKaGlNZXRyaWNzTW9uaXRvcmluZ0NvbXBvbmVudCA9IHRzbGliXzEuX19kZWNvcmF0ZShbCiAgICBDb21wb25lbnQoewogICAgICAgIHNlbGVjdG9yOiAnamhpLW1ldHJpY3MnLAogICAgICAgIHRlbXBsYXRlVXJsOiAnLi9tZXRyaWNzLmNvbXBvbmVudC5odG1sJwogICAgfSksCiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoImRlc2lnbjpwYXJhbXR5cGVzIiwgW3R5cGVvZiAoX2EgPSB0eXBlb2YgSmhpTWV0cmljc1NlcnZpY2UgIT09ICJ1bmRlZmluZWQiICYmIEpoaU1ldHJpY3NTZXJ2aWNlKSA9PT0gImZ1bmN0aW9uIiA/IF9hIDogT2JqZWN0XSkKXSwgSmhpTWV0cmljc01vbml0b3JpbmdDb21wb25lbnQpOwpleHBvcnQgeyBKaGlNZXRyaWNzTW9uaXRvcmluZ0NvbXBvbmVudCB9Owo="},{"version":3,"file":"/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/admin/metrics/metrics.component.ts","sourceRoot":"","sources":["/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js!/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/admin/metrics/metrics.component.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAElD,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAC;AAMtD,IAAa,6BAA6B,GAA1C,MAAa,6BAA6B;IAMxC,YAAoB,cAAiC;QAAjC,mBAAc,GAAd,cAAc,CAAmB;QALrD,YAAO,GAAQ,EAAE,CAAC;QAClB,eAAU,GAAQ,EAAE,CAAC;QACrB,oBAAe,GAAG,IAAI,CAAC;QAIrB,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC;IACxC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACnD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC/B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC/B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,OAAY,EAAE,GAAW;QACxC,OAAO,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,2BAA2B,CAAC,OAAY,EAAE,GAAW;QACnD,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;IACtF,CAAC;CACF,CAAA;AAhCY,6BAA6B;IAJzC,SAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,WAAW,EAAE,0BAA0B;KACxC,CAAC;iEAOoC,iBAAiB,oBAAjB,iBAAiB;GAN1C,6BAA6B,CAgCzC;SAhCY,6BAA6B","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { JhiMetricsService } from './metrics.service';\n\n@Component({\n  selector: 'jhi-metrics',\n  templateUrl: './metrics.component.html'\n})\nexport class JhiMetricsMonitoringComponent implements OnInit {\n  metrics: any = {};\n  threadData: any = {};\n  updatingMetrics = true;\n  JCACHE_KEY: string;\n\n  constructor(private metricsService: JhiMetricsService) {\n    this.JCACHE_KEY = 'jcache.statistics';\n  }\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n  refresh() {\n    this.updatingMetrics = true;\n    this.metricsService.getMetrics().subscribe(metrics => {\n      this.metrics = metrics;\n      this.metricsService.threadDump().subscribe(data => {\n        this.threadData = data.threads;\n        this.updatingMetrics = false;\n      });\n    });\n  }\n\n  isObjectExisting(metrics: any, key: string) {\n    return metrics && metrics[key];\n  }\n\n  isObjectExistingAndNotEmpty(metrics: any, key: string) {\n    return this.isObjectExisting(metrics, key) && JSON.stringify(metrics[key]) !== '{}';\n  }\n}\n"]}]}