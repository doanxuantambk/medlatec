{"remainingRequest":"/Users/tamdx/github/medlatec/gateway/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/tamdx/github/medlatec/gateway/node_modules/ts-loader/index.js??ref--9-3!/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js!/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/core/language/language.helper.ts","dependencies":[{"path":"/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/core/language/language.helper.ts","mtime":1576592214869},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYSwgX2IsIF9jLCBfZDsKaW1wb3J0IHsgSW5qZWN0YWJsZSwgUmVuZGVyZXJGYWN0b3J5MiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnOwppbXBvcnQgeyBUaXRsZSB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInOwppbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInOwppbXBvcnQgeyBUcmFuc2xhdGVTZXJ2aWNlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7CmltcG9ydCB7IExBTkdVQUdFUyB9IGZyb20gJ2FwcC9jb3JlL2xhbmd1YWdlL2xhbmd1YWdlLmNvbnN0YW50cyc7CmxldCBKaGlMYW5ndWFnZUhlbHBlciA9IGNsYXNzIEpoaUxhbmd1YWdlSGVscGVyIHsKICAgIGNvbnN0cnVjdG9yKHRyYW5zbGF0ZVNlcnZpY2UsIHRpdGxlU2VydmljZSwgcm91dGVyLCByb290UmVuZGVyZXIpIHsKICAgICAgICB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UgPSB0cmFuc2xhdGVTZXJ2aWNlOwogICAgICAgIHRoaXMudGl0bGVTZXJ2aWNlID0gdGl0bGVTZXJ2aWNlOwogICAgICAgIHRoaXMucm91dGVyID0gcm91dGVyOwogICAgICAgIHRoaXMucmVuZGVyZXIgPSBudWxsOwogICAgICAgIHRoaXMucmVuZGVyZXIgPSByb290UmVuZGVyZXIuY3JlYXRlUmVuZGVyZXIoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaHRtbCcpLCBudWxsKTsKICAgICAgICB0aGlzLmluaXQoKTsKICAgIH0KICAgIGdldEFsbCgpIHsKICAgICAgICByZXR1cm4gTEFOR1VBR0VTOwogICAgfQogICAgLyoqCiAgICAgKiBVcGRhdGUgdGhlIHdpbmRvdyB0aXRsZSB1c2luZyBwYXJhbXMgaW4gdGhlIGZvbGxvd2luZwogICAgICogb3JkZXI6CiAgICAgKiAxLiB0aXRsZUtleSBwYXJhbWV0ZXIKICAgICAqIDIuICRzdGF0ZS4kY3VycmVudC5kYXRhLnBhZ2VUaXRsZSAoY3VycmVudCBzdGF0ZSBwYWdlIHRpdGxlKQogICAgICogMy4gJ2dsb2JhbC50aXRsZScKICAgICAqLwogICAgdXBkYXRlVGl0bGUodGl0bGVLZXkpIHsKICAgICAgICBpZiAoIXRpdGxlS2V5KSB7CiAgICAgICAgICAgIHRpdGxlS2V5ID0gdGhpcy5nZXRQYWdlVGl0bGUodGhpcy5yb3V0ZXIucm91dGVyU3RhdGUuc25hcHNob3Qucm9vdCk7CiAgICAgICAgfQogICAgICAgIHRoaXMudHJhbnNsYXRlU2VydmljZS5nZXQodGl0bGVLZXkpLnN1YnNjcmliZSh0aXRsZSA9PiB7CiAgICAgICAgICAgIHRoaXMudGl0bGVTZXJ2aWNlLnNldFRpdGxlKHRpdGxlKTsKICAgICAgICB9KTsKICAgIH0KICAgIGluaXQoKSB7CiAgICAgICAgdGhpcy50cmFuc2xhdGVTZXJ2aWNlLm9uTGFuZ0NoYW5nZS5zdWJzY3JpYmUoKCkgPT4gewogICAgICAgICAgICB0aGlzLnJlbmRlcmVyLnNldEF0dHJpYnV0ZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdodG1sJyksICdsYW5nJywgdGhpcy50cmFuc2xhdGVTZXJ2aWNlLmN1cnJlbnRMYW5nKTsKICAgICAgICAgICAgdGhpcy51cGRhdGVUaXRsZSgpOwogICAgICAgIH0pOwogICAgfQogICAgZ2V0UGFnZVRpdGxlKHJvdXRlU25hcHNob3QpIHsKICAgICAgICBsZXQgdGl0bGUgPSByb3V0ZVNuYXBzaG90LmRhdGEgJiYgcm91dGVTbmFwc2hvdC5kYXRhWydwYWdlVGl0bGUnXSA/IHJvdXRlU25hcHNob3QuZGF0YVsncGFnZVRpdGxlJ10gOiAnZ2F0ZXdheUFwcCc7CiAgICAgICAgaWYgKHJvdXRlU25hcHNob3QuZmlyc3RDaGlsZCkgewogICAgICAgICAgICB0aXRsZSA9IHRoaXMuZ2V0UGFnZVRpdGxlKHJvdXRlU25hcHNob3QuZmlyc3RDaGlsZCkgfHwgdGl0bGU7CiAgICAgICAgfQogICAgICAgIHJldHVybiB0aXRsZTsKICAgIH0KfTsKSmhpTGFuZ3VhZ2VIZWxwZXIgPSB0c2xpYl8xLl9fZGVjb3JhdGUoWwogICAgSW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KSwKICAgIHRzbGliXzEuX19tZXRhZGF0YSgiZGVzaWduOnBhcmFtdHlwZXMiLCBbdHlwZW9mIChfYSA9IHR5cGVvZiBUcmFuc2xhdGVTZXJ2aWNlICE9PSAidW5kZWZpbmVkIiAmJiBUcmFuc2xhdGVTZXJ2aWNlKSA9PT0gImZ1bmN0aW9uIiA/IF9hIDogT2JqZWN0LCB0eXBlb2YgKF9iID0gdHlwZW9mIFRpdGxlICE9PSAidW5kZWZpbmVkIiAmJiBUaXRsZSkgPT09ICJmdW5jdGlvbiIgPyBfYiA6IE9iamVjdCwgdHlwZW9mIChfYyA9IHR5cGVvZiBSb3V0ZXIgIT09ICJ1bmRlZmluZWQiICYmIFJvdXRlcikgPT09ICJmdW5jdGlvbiIgPyBfYyA6IE9iamVjdCwgdHlwZW9mIChfZCA9IHR5cGVvZiBSZW5kZXJlckZhY3RvcnkyICE9PSAidW5kZWZpbmVkIiAmJiBSZW5kZXJlckZhY3RvcnkyKSA9PT0gImZ1bmN0aW9uIiA/IF9kIDogT2JqZWN0XSkKXSwgSmhpTGFuZ3VhZ2VIZWxwZXIpOwpleHBvcnQgeyBKaGlMYW5ndWFnZUhlbHBlciB9Owo="},{"version":3,"file":"/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/core/language/language.helper.ts","sourceRoot":"","sources":["/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js!/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/core/language/language.helper.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,gBAAgB,EAAa,MAAM,eAAe,CAAC;AACxE,OAAO,EAAE,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAClD,OAAO,EAAE,MAAM,EAA0B,MAAM,iBAAiB,CAAC;AACjE,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AAEvD,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AAGjE,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAG5B,YACU,gBAAkC,EAClC,YAAmB,EACnB,MAAc,EACtB,YAA8B;QAHtB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAO;QACnB,WAAM,GAAN,MAAM,CAAQ;QALhB,aAAQ,GAAc,IAAI,CAAC;QAQjC,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;QAClF,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,MAAM;QACJ,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;;;;OAMG;IACH,WAAW,CAAC,QAAiB;QAC3B,IAAI,CAAC,QAAQ,EAAE;YACb,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACrE;QAED,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACpD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,IAAI;QACV,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE;YAChD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YACtG,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,YAAY,CAAC,aAAqC;QACxD,IAAI,KAAK,GAAW,aAAa,CAAC,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;QAC3H,IAAI,aAAa,CAAC,UAAU,EAAE;YAC5B,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC;SAC9D;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CACF,CAAA;AAhDY,iBAAiB;IAD7B,UAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAKL,gBAAgB,oBAAhB,gBAAgB,oDACpB,KAAK,oBAAL,KAAK,oDACX,MAAM,oBAAN,MAAM,oDACR,gBAAgB,oBAAhB,gBAAgB;GAPrB,iBAAiB,CAgD7B;SAhDY,iBAAiB","sourcesContent":["import { Injectable, RendererFactory2, Renderer2 } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { LANGUAGES } from 'app/core/language/language.constants';\n\n@Injectable({ providedIn: 'root' })\nexport class JhiLanguageHelper {\n  private renderer: Renderer2 = null;\n\n  constructor(\n    private translateService: TranslateService,\n    private titleService: Title,\n    private router: Router,\n    rootRenderer: RendererFactory2\n  ) {\n    this.renderer = rootRenderer.createRenderer(document.querySelector('html'), null);\n    this.init();\n  }\n\n  getAll(): string[] {\n    return LANGUAGES;\n  }\n\n  /**\n   * Update the window title using params in the following\n   * order:\n   * 1. titleKey parameter\n   * 2. $state.$current.data.pageTitle (current state page title)\n   * 3. 'global.title'\n   */\n  updateTitle(titleKey?: string) {\n    if (!titleKey) {\n      titleKey = this.getPageTitle(this.router.routerState.snapshot.root);\n    }\n\n    this.translateService.get(titleKey).subscribe(title => {\n      this.titleService.setTitle(title);\n    });\n  }\n\n  private init() {\n    this.translateService.onLangChange.subscribe(() => {\n      this.renderer.setAttribute(document.querySelector('html'), 'lang', this.translateService.currentLang);\n      this.updateTitle();\n    });\n  }\n\n  private getPageTitle(routeSnapshot: ActivatedRouteSnapshot) {\n    let title: string = routeSnapshot.data && routeSnapshot.data['pageTitle'] ? routeSnapshot.data['pageTitle'] : 'gatewayApp';\n    if (routeSnapshot.firstChild) {\n      title = this.getPageTitle(routeSnapshot.firstChild) || title;\n    }\n    return title;\n  }\n}\n"]}]}