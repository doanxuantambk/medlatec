{"remainingRequest":"/Users/tamdx/github/medlatec/gateway/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/tamdx/github/medlatec/gateway/node_modules/ts-loader/index.js??ref--9-3!/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js!/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/admin/health/health.component.ts","dependencies":[{"path":"/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/admin/health/health.component.ts","mtime":1576592214252},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYSwgX2I7CmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnOwppbXBvcnQgeyBOZ2JNb2RhbCB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJzsKaW1wb3J0IHsgSmhpSGVhbHRoU2VydmljZSB9IGZyb20gJy4vaGVhbHRoLnNlcnZpY2UnOwppbXBvcnQgeyBKaGlIZWFsdGhNb2RhbENvbXBvbmVudCB9IGZyb20gJy4vaGVhbHRoLW1vZGFsLmNvbXBvbmVudCc7CmxldCBKaGlIZWFsdGhDaGVja0NvbXBvbmVudCA9IGNsYXNzIEpoaUhlYWx0aENoZWNrQ29tcG9uZW50IHsKICAgIGNvbnN0cnVjdG9yKG1vZGFsU2VydmljZSwgaGVhbHRoU2VydmljZSkgewogICAgICAgIHRoaXMubW9kYWxTZXJ2aWNlID0gbW9kYWxTZXJ2aWNlOwogICAgICAgIHRoaXMuaGVhbHRoU2VydmljZSA9IGhlYWx0aFNlcnZpY2U7CiAgICB9CiAgICBuZ09uSW5pdCgpIHsKICAgICAgICB0aGlzLnJlZnJlc2goKTsKICAgIH0KICAgIGJhc2VOYW1lKG5hbWUpIHsKICAgICAgICByZXR1cm4gdGhpcy5oZWFsdGhTZXJ2aWNlLmdldEJhc2VOYW1lKG5hbWUpOwogICAgfQogICAgZ2V0QmFkZ2VDbGFzcyhzdGF0dXNTdGF0ZSkgewogICAgICAgIGlmIChzdGF0dXNTdGF0ZSA9PT0gJ1VQJykgewogICAgICAgICAgICByZXR1cm4gJ2JhZGdlLXN1Y2Nlc3MnOwogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuICdiYWRnZS1kYW5nZXInOwogICAgICAgIH0KICAgIH0KICAgIHJlZnJlc2goKSB7CiAgICAgICAgdGhpcy51cGRhdGluZ0hlYWx0aCA9IHRydWU7CiAgICAgICAgdGhpcy5oZWFsdGhTZXJ2aWNlLmNoZWNrSGVhbHRoKCkuc3Vic2NyaWJlKGhlYWx0aCA9PiB7CiAgICAgICAgICAgIHRoaXMuaGVhbHRoRGF0YSA9IHRoaXMuaGVhbHRoU2VydmljZS50cmFuc2Zvcm1IZWFsdGhEYXRhKGhlYWx0aCk7CiAgICAgICAgICAgIHRoaXMudXBkYXRpbmdIZWFsdGggPSBmYWxzZTsKICAgICAgICB9LCBlcnJvciA9PiB7CiAgICAgICAgICAgIGlmIChlcnJvci5zdGF0dXMgPT09IDUwMykgewogICAgICAgICAgICAgICAgdGhpcy5oZWFsdGhEYXRhID0gdGhpcy5oZWFsdGhTZXJ2aWNlLnRyYW5zZm9ybUhlYWx0aERhdGEoZXJyb3IuZXJyb3IpOwogICAgICAgICAgICAgICAgdGhpcy51cGRhdGluZ0hlYWx0aCA9IGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICB9CiAgICBzaG93SGVhbHRoKGhlYWx0aCkgewogICAgICAgIGNvbnN0IG1vZGFsUmVmID0gdGhpcy5tb2RhbFNlcnZpY2Uub3BlbihKaGlIZWFsdGhNb2RhbENvbXBvbmVudCk7CiAgICAgICAgbW9kYWxSZWYuY29tcG9uZW50SW5zdGFuY2UuY3VycmVudEhlYWx0aCA9IGhlYWx0aDsKICAgIH0KICAgIHN1YlN5c3RlbU5hbWUobmFtZSkgewogICAgICAgIHJldHVybiB0aGlzLmhlYWx0aFNlcnZpY2UuZ2V0U3ViU3lzdGVtTmFtZShuYW1lKTsKICAgIH0KfTsKSmhpSGVhbHRoQ2hlY2tDb21wb25lbnQgPSB0c2xpYl8xLl9fZGVjb3JhdGUoWwogICAgQ29tcG9uZW50KHsKICAgICAgICBzZWxlY3RvcjogJ2poaS1oZWFsdGgnLAogICAgICAgIHRlbXBsYXRlVXJsOiAnLi9oZWFsdGguY29tcG9uZW50Lmh0bWwnCiAgICB9KSwKICAgIHRzbGliXzEuX19tZXRhZGF0YSgiZGVzaWduOnBhcmFtdHlwZXMiLCBbdHlwZW9mIChfYSA9IHR5cGVvZiBOZ2JNb2RhbCAhPT0gInVuZGVmaW5lZCIgJiYgTmdiTW9kYWwpID09PSAiZnVuY3Rpb24iID8gX2EgOiBPYmplY3QsIHR5cGVvZiAoX2IgPSB0eXBlb2YgSmhpSGVhbHRoU2VydmljZSAhPT0gInVuZGVmaW5lZCIgJiYgSmhpSGVhbHRoU2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYiA6IE9iamVjdF0pCl0sIEpoaUhlYWx0aENoZWNrQ29tcG9uZW50KTsKZXhwb3J0IHsgSmhpSGVhbHRoQ2hlY2tDb21wb25lbnQgfTsK"},{"version":3,"file":"/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/admin/health/health.component.ts","sourceRoot":"","sources":["/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js!/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/admin/health/health.component.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AAEtD,OAAO,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AACpD,OAAO,EAAE,uBAAuB,EAAE,MAAM,0BAA0B,CAAC;AAMnE,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAIlC,YAAoB,YAAsB,EAAU,aAA+B;QAA/D,iBAAY,GAAZ,YAAY,CAAU;QAAU,kBAAa,GAAb,aAAa,CAAkB;IAAG,CAAC;IAEvF,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,aAAa,CAAC,WAAW;QACvB,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,OAAO,eAAe,CAAC;SACxB;aAAM;YACL,OAAO,cAAc,CAAC;SACvB;IACH,CAAC;IAED,OAAO;QACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAE3B,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CACxC,MAAM,CAAC,EAAE;YACP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YACjE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACtE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,MAAW;QACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACjE,QAAQ,CAAC,iBAAiB,CAAC,aAAa,GAAG,MAAM,CAAC;IACpD,CAAC;IAED,aAAa,CAAC,IAAY;QACxB,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;CACF,CAAA;AA/CY,uBAAuB;IAJnC,SAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,WAAW,EAAE,yBAAyB;KACvC,CAAC;iEAKkC,QAAQ,oBAAR,QAAQ,oDAAyB,gBAAgB,oBAAhB,gBAAgB;GAJxE,uBAAuB,CA+CnC;SA/CY,uBAAuB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { JhiHealthService } from './health.service';\nimport { JhiHealthModalComponent } from './health-modal.component';\n\n@Component({\n  selector: 'jhi-health',\n  templateUrl: './health.component.html'\n})\nexport class JhiHealthCheckComponent implements OnInit {\n  healthData: any;\n  updatingHealth: boolean;\n\n  constructor(private modalService: NgbModal, private healthService: JhiHealthService) {}\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n  baseName(name: string) {\n    return this.healthService.getBaseName(name);\n  }\n\n  getBadgeClass(statusState) {\n    if (statusState === 'UP') {\n      return 'badge-success';\n    } else {\n      return 'badge-danger';\n    }\n  }\n\n  refresh() {\n    this.updatingHealth = true;\n\n    this.healthService.checkHealth().subscribe(\n      health => {\n        this.healthData = this.healthService.transformHealthData(health);\n        this.updatingHealth = false;\n      },\n      error => {\n        if (error.status === 503) {\n          this.healthData = this.healthService.transformHealthData(error.error);\n          this.updatingHealth = false;\n        }\n      }\n    );\n  }\n\n  showHealth(health: any) {\n    const modalRef = this.modalService.open(JhiHealthModalComponent);\n    modalRef.componentInstance.currentHealth = health;\n  }\n\n  subSystemName(name: string) {\n    return this.healthService.getSubSystemName(name);\n  }\n}\n"]}]}