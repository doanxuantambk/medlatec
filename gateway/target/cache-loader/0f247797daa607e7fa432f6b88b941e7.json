{"remainingRequest":"/Users/tamdx/github/medlatec/gateway/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/tamdx/github/medlatec/gateway/node_modules/ts-loader/index.js??ref--9-3!/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js!/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/account/password/password.component.ts","dependencies":[{"path":"/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/account/password/password.component.ts","mtime":1576592213932},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYSwgX2IsIF9jOwppbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJzsKaW1wb3J0IHsgRm9ybUJ1aWxkZXIsIFZhbGlkYXRvcnMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7CmltcG9ydCB7IEFjY291bnRTZXJ2aWNlIH0gZnJvbSAnYXBwL2NvcmUvYXV0aC9hY2NvdW50LnNlcnZpY2UnOwppbXBvcnQgeyBQYXNzd29yZFNlcnZpY2UgfSBmcm9tICcuL3Bhc3N3b3JkLnNlcnZpY2UnOwpsZXQgUGFzc3dvcmRDb21wb25lbnQgPSBjbGFzcyBQYXNzd29yZENvbXBvbmVudCB7CiAgICBjb25zdHJ1Y3RvcihwYXNzd29yZFNlcnZpY2UsIGFjY291bnRTZXJ2aWNlLCBmYikgewogICAgICAgIHRoaXMucGFzc3dvcmRTZXJ2aWNlID0gcGFzc3dvcmRTZXJ2aWNlOwogICAgICAgIHRoaXMuYWNjb3VudFNlcnZpY2UgPSBhY2NvdW50U2VydmljZTsKICAgICAgICB0aGlzLmZiID0gZmI7CiAgICAgICAgdGhpcy5wYXNzd29yZEZvcm0gPSB0aGlzLmZiLmdyb3VwKHsKICAgICAgICAgICAgY3VycmVudFBhc3N3b3JkOiBbJycsIFtWYWxpZGF0b3JzLnJlcXVpcmVkXV0sCiAgICAgICAgICAgIG5ld1Bhc3N3b3JkOiBbJycsIFtWYWxpZGF0b3JzLnJlcXVpcmVkLCBWYWxpZGF0b3JzLm1pbkxlbmd0aCg0KSwgVmFsaWRhdG9ycy5tYXhMZW5ndGgoNTApXV0sCiAgICAgICAgICAgIGNvbmZpcm1QYXNzd29yZDogWycnLCBbVmFsaWRhdG9ycy5yZXF1aXJlZCwgVmFsaWRhdG9ycy5taW5MZW5ndGgoNCksIFZhbGlkYXRvcnMubWF4TGVuZ3RoKDUwKV1dCiAgICAgICAgfSk7CiAgICB9CiAgICBuZ09uSW5pdCgpIHsKICAgICAgICB0aGlzLmFjY291bnQkID0gdGhpcy5hY2NvdW50U2VydmljZS5pZGVudGl0eSgpOwogICAgfQogICAgY2hhbmdlUGFzc3dvcmQoKSB7CiAgICAgICAgY29uc3QgbmV3UGFzc3dvcmQgPSB0aGlzLnBhc3N3b3JkRm9ybS5nZXQoWyduZXdQYXNzd29yZCddKS52YWx1ZTsKICAgICAgICBpZiAobmV3UGFzc3dvcmQgIT09IHRoaXMucGFzc3dvcmRGb3JtLmdldChbJ2NvbmZpcm1QYXNzd29yZCddKS52YWx1ZSkgewogICAgICAgICAgICB0aGlzLmVycm9yID0gbnVsbDsKICAgICAgICAgICAgdGhpcy5zdWNjZXNzID0gbnVsbDsKICAgICAgICAgICAgdGhpcy5kb05vdE1hdGNoID0gJ0VSUk9SJzsKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIHRoaXMuZG9Ob3RNYXRjaCA9IG51bGw7CiAgICAgICAgICAgIHRoaXMucGFzc3dvcmRTZXJ2aWNlLnNhdmUobmV3UGFzc3dvcmQsIHRoaXMucGFzc3dvcmRGb3JtLmdldChbJ2N1cnJlbnRQYXNzd29yZCddKS52YWx1ZSkuc3Vic2NyaWJlKCgpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IgPSBudWxsOwogICAgICAgICAgICAgICAgdGhpcy5zdWNjZXNzID0gJ09LJzsKICAgICAgICAgICAgfSwgKCkgPT4gewogICAgICAgICAgICAgICAgdGhpcy5zdWNjZXNzID0gbnVsbDsKICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IgPSAnRVJST1InOwogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICB9Cn07ClBhc3N3b3JkQ29tcG9uZW50ID0gdHNsaWJfMS5fX2RlY29yYXRlKFsKICAgIENvbXBvbmVudCh7CiAgICAgICAgc2VsZWN0b3I6ICdqaGktcGFzc3dvcmQnLAogICAgICAgIHRlbXBsYXRlVXJsOiAnLi9wYXNzd29yZC5jb21wb25lbnQuaHRtbCcKICAgIH0pLAogICAgdHNsaWJfMS5fX21ldGFkYXRhKCJkZXNpZ246cGFyYW10eXBlcyIsIFt0eXBlb2YgKF9hID0gdHlwZW9mIFBhc3N3b3JkU2VydmljZSAhPT0gInVuZGVmaW5lZCIgJiYgUGFzc3dvcmRTZXJ2aWNlKSA9PT0gImZ1bmN0aW9uIiA/IF9hIDogT2JqZWN0LCB0eXBlb2YgKF9iID0gdHlwZW9mIEFjY291bnRTZXJ2aWNlICE9PSAidW5kZWZpbmVkIiAmJiBBY2NvdW50U2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYiA6IE9iamVjdCwgdHlwZW9mIChfYyA9IHR5cGVvZiBGb3JtQnVpbGRlciAhPT0gInVuZGVmaW5lZCIgJiYgRm9ybUJ1aWxkZXIpID09PSAiZnVuY3Rpb24iID8gX2MgOiBPYmplY3RdKQpdLCBQYXNzd29yZENvbXBvbmVudCk7CmV4cG9ydCB7IFBhc3N3b3JkQ29tcG9uZW50IH07Cg=="},{"version":3,"file":"/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/account/password/password.component.ts","sourceRoot":"","sources":["/Users/tamdx/github/medlatec/gateway/node_modules/eslint-loader/dist/cjs.js!/Users/tamdx/github/medlatec/gateway/src/main/webapp/app/account/password/password.component.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAGzD,OAAO,EAAE,cAAc,EAAE,MAAM,+BAA+B,CAAC;AAE/D,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AAMrD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAW5B,YAAoB,eAAgC,EAAU,cAA8B,EAAU,EAAe;QAAjG,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QANrH,iBAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC5C,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3F,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAChG,CAAC,CAAC;IAEqH,CAAC;IAEzH,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;IACjD,CAAC;IAED,cAAc;QACZ,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC;QACjE,IAAI,WAAW,KAAK,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,KAAK,EAAE;YACpE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAChG,GAAG,EAAE;gBACH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACtB,CAAC,EACD,GAAG,EAAE;gBACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;YACvB,CAAC,CACF,CAAC;SACH;IACH,CAAC;CACF,CAAA;AArCY,iBAAiB;IAJ7B,SAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,WAAW,EAAE,2BAA2B;KACzC,CAAC;iEAYqC,eAAe,oBAAf,eAAe,oDAA0B,cAAc,oBAAd,cAAc,oDAAc,WAAW,oBAAX,WAAW;GAX1G,iBAAiB,CAqC7B;SArCY,iBAAiB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { AccountService } from 'app/core/auth/account.service';\nimport { Account } from 'app/core/user/account.model';\nimport { PasswordService } from './password.service';\n\n@Component({\n  selector: 'jhi-password',\n  templateUrl: './password.component.html'\n})\nexport class PasswordComponent implements OnInit {\n  doNotMatch: string;\n  error: string;\n  success: string;\n  account$: Observable<Account>;\n  passwordForm = this.fb.group({\n    currentPassword: ['', [Validators.required]],\n    newPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n    confirmPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]]\n  });\n\n  constructor(private passwordService: PasswordService, private accountService: AccountService, private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.account$ = this.accountService.identity();\n  }\n\n  changePassword() {\n    const newPassword = this.passwordForm.get(['newPassword']).value;\n    if (newPassword !== this.passwordForm.get(['confirmPassword']).value) {\n      this.error = null;\n      this.success = null;\n      this.doNotMatch = 'ERROR';\n    } else {\n      this.doNotMatch = null;\n      this.passwordService.save(newPassword, this.passwordForm.get(['currentPassword']).value).subscribe(\n        () => {\n          this.error = null;\n          this.success = 'OK';\n        },\n        () => {\n          this.success = null;\n          this.error = 'ERROR';\n        }\n      );\n    }\n  }\n}\n"]}]}